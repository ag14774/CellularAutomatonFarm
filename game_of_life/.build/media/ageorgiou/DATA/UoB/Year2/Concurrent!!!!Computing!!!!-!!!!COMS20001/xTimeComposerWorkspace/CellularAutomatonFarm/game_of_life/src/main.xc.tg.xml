<taskgraph>
<task>
  <name>delay_seconds</name>
  <inFunction>delay_seconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_milliseconds</name>
  <inFunction>delay_milliseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_microseconds</name>
  <inFunction>delay_microseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>_safe_memcmp</name>
  <inFunction>_safe_memcmp</inFunction>
</task>
<task>
  <name>_safe_memmove</name>
  <inFunction>_safe_memmove</inFunction>
</task>
<task>
  <name>_safe_memset</name>
  <inFunction>_safe_memset</inFunction>
</task>
<task>
  <name>read_reg</name>
  <inFunction>read_reg</inFunction>
</task>
<task>
  <name>write_reg</name>
  <inFunction>write_reg</inFunction>
</task>
<task>
  <name>read_reg8_addr16</name>
  <inFunction>read_reg8_addr16</inFunction>
</task>
<task>
  <name>write_reg8_addr16</name>
  <inFunction>write_reg8_addr16</inFunction>
</task>
<task>
  <name>read_reg16</name>
  <inFunction>read_reg16</inFunction>
</task>
<task>
  <name>write_reg16</name>
  <inFunction>write_reg16</inFunction>
</task>
<task>
  <name>read_reg16_addr8</name>
  <inFunction>read_reg16_addr8</inFunction>
</task>
<task>
  <name>write_reg16_addr8</name>
  <inFunction>write_reg16_addr8</inFunction>
</task>
<task>
  <name>setBit</name>
  <inFunction>setBit</inFunction>
</task>
<task>
  <name>clearBit</name>
  <inFunction>clearBit</inFunction>
</task>
<task>
  <name>changeBit</name>
  <inFunction>changeBit</inFunction>
</task>
<task>
  <name>getBit</name>
  <inFunction>getBit</inFunction>
</task>
<task>
  <name>lines2bytes</name>
  <inFunction>lines2bytes</inFunction>
</task>
<task>
  <name>mod</name>
  <inFunction>mod</inFunction>
</task>
<task>
  <name>decide</name>
  <inFunction>decide</inFunction>
</task>
<task>
  <name>getBitToroidal</name>
  <inFunction>getBitToroidal</inFunction>
</task>
<task>
  <name>countAliveNeighbours</name>
  <inFunction>countAliveNeighbours</inFunction>
</task>
<task>
  <name>showLEDs</name>
  <inFunction>showLEDs</inFunction>
</task>
<task>
  <name>buttonListener</name>
  <inFunction>buttonListener</inFunction>
</task>
<task>
  <name>DataInStream</name>
  <inFunction>DataInStream</inFunction>
</task>
<task>
  <name>distributor</name>
  <inFunction>distributor</inFunction>
  <endOfSeqCalledFunction>printf</endOfSeqCalledFunction>
</task>
<task>
  <name>worker</name>
  <inFunction>worker</inFunction>
</task>
<task>
  <name>DataOutStream</name>
  <inFunction>DataOutStream</inFunction>
</task>
<task>
  <name>accelerometer</name>
  <inFunction>accelerometer</inFunction>
</task>
<task>
  <name>main</name>
  <inFunction>main</inFunction>
</task>
<task>
  <name>_task_buttonListener_0</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>buttonListener</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_i2c_master_1</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>i2c_master</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_accelerometer_2</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>accelerometer</calledFunction>
  <tile>tile[0]</tile>
  <core>2</core>
  <inPar/>
</task>
<task>
  <name>_task_showLEDs_3</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>showLEDs</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_DataInStream_4</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>DataInStream</calledFunction>
  <tile>tile[0]</tile>
  <core>4</core>
  <inPar/>
</task>
<task>
  <name>_task_DataOutStream_5</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>DataOutStream</calledFunction>
  <tile>tile[0]</tile>
  <core>5</core>
  <inPar/>
</task>
<task>
  <name>_task_distributor_6</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>distributor</calledFunction>
  <tile>tile[0]</tile>
  <core>6</core>
  <inPar/>
</task>
<task>
  <name>_task_7</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <core>8</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_8</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[0]</tile>
  <core>9</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_9</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[0]</tile>
  <core>10</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_10</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[0]</tile>
  <core>11</core>
  <inPar/>
</task>
<connection>
  <ends>
    <end task="_task_buttonListener_0" type="server"/>
    <end task="_task_DataOutStream_5" type="client"/>
  </ends>
    <index>0</index>
  <name>i_buttonRequests</name>
   <interface>buttonRequest</interface>
</connection>
<connection>
  <ends>
    <end task="_task_i2c_master_1" type="server"/>
    <end task="_task_accelerometer_2" type="client"/>
  </ends>
    <index>0</index>
  <name>i2c</name>
   <interface>i2c_master_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_accelerometer_2" type="chan"/>
    <end task="_task_distributor_6" type="chan"/>
  </ends>
  <name>c_control</name>
</connection>
<connection>
  <ends>
    <end task="_task_showLEDs_3" type="server"/>
    <end task="_task_DataInStream_4" type="client"/>
  </ends>
    <index>0</index>
  <name>i_ledControl</name>
   <interface>ledControl</interface>
</connection>
<connection>
  <ends>
    <end task="_task_showLEDs_3" type="server"/>
    <end task="_task_DataOutStream_5" type="client"/>
  </ends>
    <index>1</index>
  <name>i_ledControl</name>
   <interface>ledControl</interface>
</connection>
<connection>
  <ends>
    <end task="_task_DataInStream_4" type="schan"/>
    <end task="_task_distributor_6" type="schan"/>
  </ends>
  <name>c_inIO</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_6" type="server"/>
    <end task="_task_DataOutStream_5" type="client"/>
  </ends>
  <name>i_out</name>
   <interface>outInterface</interface>
   <notification>end_transaction</notification>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_6" type="server"/>
    <end task="_task_worker_8" type="client"/>
  </ends>
    <index>0</index>
  <name>i_d2w</name>
   <interface>d2w</interface>
   <notification>data_ready</notification>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_6" type="server"/>
    <end task="_task_worker_9" type="client"/>
  </ends>
    <index>1</index>
  <name>i_d2w</name>
   <interface>d2w</interface>
   <notification>data_ready</notification>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_6" type="server"/>
    <end task="_task_worker_10" type="client"/>
  </ends>
    <index>2</index>
  <name>i_d2w</name>
   <interface>d2w</interface>
   <notification>data_ready</notification>
</connection>
</taskgraph>
